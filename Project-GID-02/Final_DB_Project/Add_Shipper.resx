<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="add_shipp_btn.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAA44AAAAzCAYAAADYS1aiAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAARLSURBVHhe7d3Lb1RVHAfwWbpkyaKdO1MiQkygGsIjIOCO
        lXFj4tKl2kCaUIIgMRpRHp1XCXHhxrj2H3DFlrhiaeKChEepQ8FpRaDt3NtjTxkf4PWCjwXt/fySz930
        d890+83vnnMq/6SSqeXdw+3wcb2RXq430ytJK5utdkIAAADg+RWzW8xwUcx0Q1PLhwYx7/+ppB021Bv9
        L6utbH7TucXe9lNzYddEN+w52g2vHZkOr793DQAAgOdYzG4xw0Ux020+s9CrdrJ+rZl9s5L5aoP49+8q
        aWRna820N3ribn//4Zu5/wAAAABrz8Gx62HH8Tuh3uj34rAw+Sq8MIiCz1ZxyjjSSL/b9uHcwwNjN3J/
        BAAAgLUvBsg4LKw10x+Si2HjIBYWVxxTjkz2v9850V3MWxQAAID1Z+/4TJw+zqxkwtFBPMyv1UnjSmiM
        L+QtBAAAwPoVtyjWJ/u3C/c9xs9TTRoBAADKa9/4rTh5vBoHi4Oo+EfV29mF7Sd7D/NeBAAAoDx2HJ9d
        qjeXvh3ExUcVN0DWGul83BSZ9xIAAADlMnJ+ae6x/Y7x6NV4ik5eMwAAAOWz89jtUG+kl1ZDY7yrI2ln
        P7t2AwAAgD+rtbL7q1d0DE0tH9p8ZqGX1wQAAEB5vfzJvfvDneV3KysJ8otXTv6U2wQAAEB5/f656srj
        8q6Jbm4TAAAA5RWv5kha6XSl1kyvuvAfAACAJ8WzcJJ29qASHw7GAQAAIE+1E0IlPvL+CAAAAIIjAAAA
        hQRHAAAACgmOAAAAFBIcAQAAKCQ4AgAAUEhwBAAAoJDgCAAAQCHBEQAAgEKCIwAAAIUERwAAAAoJjgAA
        ABQSHAEAACgkOAIAAFBIcAQAAKCQ4AgAAEAhwREAAIBCgiMAAACFBEcAAAAKDYJj1j84dj23AQAAgHJb
        DY5JK53eN34rtwEAAIDyikPGOGys1JvplT1Hu7lNAAAAlNdrR6ZD0spmKyuPr189cTe3CQAAgPLaNdEN
        9UZ6uTLcDu9s/fSXe3lNAAAAlNe2U3P9ajM7XUnaYUO1lS3kNQEAAFBeI+eX5lYy42glVr2RXtp57HZu
        IwAAAOWzd3wm1Jrp1dXQGCsmyJgk85oBAAAony2nH8wNtcObg9j4qEwdAQAAiP4ybfytkothY73RvxaP
        W817EQAAgPXvwNiNMDK59GNyIWwZxMXH69Enq4t34iWPeQsAAACwvr30+cO71WZ4axAT82u40X8jhsf9
        h2/mLgIAAMD6EyeNMTQmk+n7g3hYXHHyWG/0Z/Yc7eYuCAAAwPoR9zTGz1OfOml8slb3PDbTKy+eXejF
        RfIWBwAAYO2KZ9xs/ezBfDwI52/3ND5LJe1wMC5Sb/Tnt300349TSHsgAQAA1qaY6UZP9cKmc4u9pJXN
        DnWW3x7Ev/9eMX0Od8IHcQpZ7WT9aicEAAAA1paY6ZJ2NplMLe8exL2nVKXyK2QgiCF3YQ45AAAAAElF
        TkSuQmCC
</value>
  </data>
</root>