<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="apply_loan_btn.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAzEAAAA3CAYAAAA8J8QAAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAAROSURBVHhe7d3LbxVVHMDxu3TJkgW9c2+JCjGBagiP8HTn
        yrgxcelSbSBNKEGQGI2oQO8LQly4Ma79B1yxJa5Ymrgg4VFqKXhbkUd7Z3rsKaMGHaFKoTPJ55d87oYz
        U7bfnDkztf8yydnFnUPd8EmzlV5sttNLSSebqfdCAAAAWKnYEbEnotgXG84uvpEnx+pM0g3rmq3B1/VO
        Nrfx9Hx/64nZsGN8Ouw6PB32HpoMr79/BQAAYMViR8SeiGJfvPTlg369lw0a7ey7pf5o5Cny/yZpZaca
        7bQ/cuz2YN/B64X/AQAAgKd1YPRq2Hb0Vmi2Bv24iZJ8E17Is2RlE3dfhlvpD1s+mr2/f/Ra4R8BAABY
        bTFm4iZKo53+lJwP6/NEefzE7ZvhicGP28en54tuCgAA8KztHpuKuzJTS30ykqdK8SzvwCwFTLyg6EYA
        AADPSzzS0pwY3HzsOZn4CJkdGAAAoCz2jN2IOzKX44ZLni1/TbObndt6vH+/6EIAAIC1su3ozEKzvfB9
        ni4PJx6YabTSuXiIpugiAACAtTR8ZmH2kfMx8RVm8Q0ARYsBAADW2vYjN0OzlV5YDpj4/uWkm/3qVcoA
        AECZNTrZ3eXXLsdP/McvZBYtAgAAKItXPr1zd6i3+F5tqWa+evX4L4WLAAAAyuLPR8qWfi7uGJ8uXAQA
        AFAW8XXLSSedrDXa6WUftwQAAMounuNPutm9WvxxqB8AAKiCei+EWvwp+kcAAICyETEAAECliBgAAKBS
        RAwAAFApIgYAAKgUEQMAAFSKiAEAACpFxAAAAJUiYgAAgEoRMQAAQKWIGAAAoFJEDAAAUCkiBgAAqBQR
        AwAAVIqIAQAAKkXEAAAAlSJiAACAShExAABApYgYAACgUkQMAABQKSIGAACoFBEDAABUiogBAAAqJY+Y
        bHBg9GrhAgAAgDJZjpikk07uGbtRuAAAAKAs4uZL3ISpNdvppV2HpwsXAQAAlMXeQ5Mh6WQztaWfb187
        drtwEQAAQFnsGJ8OzVZ6sTbUDe9u/uy3O0WLAAAAymLLidlBvZ2drCXdsK7eyR4ULQIAACiL4TMLs0v9
        MlKL02ylF7YfuVm4EAAAYK3tHpsKjXZ6eTlg4sSaiVVTtBgAAGCtbTp5b3ZDN7yVJ8zDsRsDAACU0T92
        Yf6Y5HxY32wNrsTXlhVdCAAA8LztH70WhicWfk7OhU15ujw6Dx8rm7/lC/4AAEAZvPzF/dv1dng7T5bi
        GWoN3owhs+/g9cKbAAAAPGtxByYGTDKRfpCnyuMn7sg0W4MpX/IHAACet3gGJj5C9sQdmL/P8hmZdnrp
        xVMP+vEmRTcHAABYLfF8/ubP783FQ/z/egZmJZN0w4F4k2ZrMLfl47lB3J1xZgYAAFgNsS9GTvTDxtPz
        /aSTzWzoLb6Tp8jTTyyhoV74MO7O1HvZoN4LAQAA4GnEvki62URydnFnnh5PmFrtd1j0zn4m7F0lAAAA
        AElFTkSuQmCC
</value>
  </data>
</root>